#if defined(__x86_64__) && __x86_64__ || (__arm64__) && __arm64__

// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef CMSPAAS_SWIFT_H
#define CMSPAAS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CMSPaaS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSNumber;
@class UIColor;
@class UIFont;
@class NSString;
enum CMSAudioStatus : NSInteger;
@protocol CMSPlayerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC7CMSPaaS16CMSAudioPlayView")
@interface CMSAudioPlayView : UIView
/// 缓存进度条
@property (nonatomic) CGFloat backProgress;
/// 当前播放进度
@property (nonatomic) CGFloat currentPlayProgress;
/// 播放左边颜色
@property (nonatomic, strong) UIColor * _Nullable readColor;
/// 播放右边颜色
@property (nonatomic, strong) UIColor * _Nullable readyColor;
/// 时间颜色
@property (nonatomic, strong) UIColor * _Nullable timeColor;
/// 时间字体大小
@property (nonatomic, strong) UIFont * _Nullable timeFont;
/// 时间背景颜色
@property (nonatomic, strong) UIColor * _Nullable timeBackGroundColor;
/// 切圆角
@property (nonatomic) CGFloat roundedCornersRadius;
/// 结束时间
@property (nonatomic, copy) NSString * _Nullable endTime;
/// 开始时间
@property (nonatomic, copy) NSString * _Nullable startTime;
/// 播放改变状态 （主要针对播放完成时的状态）
@property (nonatomic) enum CMSAudioStatus status;
/// 播放代理接口
@property (nonatomic, weak) id <CMSPlayerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// 使用适配需要重新配置UI界面
- (void)refreshUI;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CMSAudioStatus, closed) {
  CMSAudioStatusAudioStatusPlaying = 0,
  CMSAudioStatusAudioStatusPaused = 1,
  CMSAudioStatusAudioStatusFailed = 2,
  CMSAudioStatusAudioStatusFinished = 3,
  CMSAudioStatusAudioStatusAgain = 4,
};


SWIFT_CLASS("_TtC7CMSPaaS15CMSCustomSlider")
@interface CMSCustomSlider : UISlider
- (CGRect)minimumValueImageRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)maximumValueImageRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)trackRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum CMSCycleScrollType : NSInteger;
@protocol CMSCycleCollectionViewDelegate;
@class UINib;
@class NSIndexPath;
@class UICollectionViewCell;

SWIFT_CLASS("_TtC7CMSPaaS22CMSCycleCollectionView")
@interface CMSCycleCollectionView : UIView
/// 外边距
@property (nonatomic) UIEdgeInsets marginInset;
/// 内边距
@property (nonatomic) UIEdgeInsets paddingInset;
/// item 宽高比(竖向 高宽比)，默认0 如果想指定大小，设置为0, 阈值[0,5]
@property (nonatomic) CGFloat itemSizeScale;
/// 高度不能大于frame - 内边距，否则按照比例自动缩减
@property (nonatomic) CGSize itemSize;
/// 间距
@property (nonatomic) CGFloat minimumLineSpacing;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didSelectItemBlock)(NSInteger);
/// 监听滚动的结果 currentIndex 翻页滚动时返回   offset 滚动偏移量
@property (nonatomic, copy) void (^ _Nullable didScrollItemOperationBlock)(NSInteger, CGPoint);
/// 是否可用滑动手势
@property (nonatomic) BOOL isEnabledPanGestureRecognizer;
/// 滚动模式
@property (nonatomic) enum CMSCycleScrollType scrollType;
/// 滚动模式下生效，滚动速度,每秒所滚动的单位
@property (nonatomic) CGFloat scrollSpeed;
/// 自动滚动间隔时间,默认2.5s
@property (nonatomic) NSTimeInterval autoScrollTimeInterval;
/// 是否自动滚动,默认false
@property (nonatomic) BOOL isAutoScroll;
/// 是否无限循环
@property (nonatomic) BOOL isInfiniteLoop;
/// 修正比例，无限循环条件下生效，阈值 0-1， 0 不修正， 1持续修正
@property (nonatomic) CGFloat fixScale;
/// 方向
@property (nonatomic) UICollectionViewScrollDirection scrollDirection;
/// 是否按页操作
@property (nonatomic) BOOL isPagingEnabled;
@property (nonatomic, weak) id <CMSCycleCollectionViewDelegate> _Nullable delegate;
- (void)register:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (void)registerWithNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (UICollectionViewCell * _Nonnull)dequeueReusableCellWithReuseIdentifier:(NSString * _Nonnull)identifier forIndexPath:(NSIndexPath * _Nonnull)forIndexPath SWIFT_WARN_UNUSED_RESULT;
- (void)reloadData;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class UICollectionViewLayout;

@interface CMSCycleCollectionView (SWIFT_EXTENSION(CMSPaaS)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


@class UIScrollView;

@interface CMSCycleCollectionView (SWIFT_EXTENSION(CMSPaaS)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)invalidateTimer;
- (void)setupTimer;
@end


SWIFT_PROTOCOL("_TtP7CMSPaaS30CMSCycleCollectionViewDelegate_")
@protocol CMSCycleCollectionViewDelegate <NSObject>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@optional
- (CGSize)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

/// 滚动模式
typedef SWIFT_ENUM(NSInteger, CMSCycleScrollType, closed) {
/// 分页式滚动
  CMSCycleScrollTypePage = 0,
/// 匀速滚动
  CMSCycleScrollTypeConstantSpeed = 1,
};


SWIFT_CLASS("_TtC7CMSPaaS19CMSHomeLecturerView")
@interface CMSHomeLecturerView : UIView
@property (nonatomic) BOOL adTag;
@property (nonatomic, copy) NSString * _Nonnull adTagBackColor;
@property (nonatomic, copy) NSString * _Nonnull noticeTag;
@property (nonatomic, copy) NSString * _Nonnull headlineStr;
@property (nonatomic, copy) NSString * _Nonnull titleStr;
@property (nonatomic, copy) NSString * _Nonnull startTime;
@property (nonatomic, copy) NSString * _Nonnull nameStr;
@property (nonatomic, copy) NSString * _Nonnull backImage;
@property (nonatomic, copy) NSString * _Nonnull headImage;
@property (nonatomic, copy) NSString * _Nonnull playImage;
- (void)setViewHeadlineBackColor:(NSString * _Nonnull)headlineBackColorStr titleColor:(NSString * _Nonnull)titleColorStr userNameRightColor:(NSString * _Nonnull)rightColor userNameLeftColor:(NSString * _Nonnull)leftColor;
- (void)setViewDataTitle:(NSString * _Nonnull)titleStr headline:(NSString * _Nonnull)headlineStr adTag:(BOOL)isAdTag userName:(NSString * _Nonnull)nameStr userPosition:(NSString * _Nonnull)position;
- (void)setViewBackImage:(NSString * _Nonnull)backImageStr playImage:(NSString * _Nonnull)playImageStr headImage:(NSString * _Nonnull)headImageStr;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CMSPaaS19CMSHomeMaskPlayView")
@interface CMSHomeMaskPlayView : UIView
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageNamed;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class CMSInformationTagModel;
@class UILabel;

SWIFT_CLASS("_TtC7CMSPaaS25CMSInformationContentView")
@interface CMSInformationContentView : UIView
/// 默认不使用缓存
@property (nonatomic) BOOL isUseCache;
@property (nonatomic) CGFloat preferredMaxLayoutWidth;
@property (nonatomic) CGFloat titleMinLineHeight;
@property (nonatomic) NSInteger textNumberOfLines;
@property (nonatomic) CGFloat textMinLineHeight;
@property (nonatomic, strong) UIFont * _Nonnull tagFont;
@property (nonatomic, strong) UIColor * _Nonnull tagColor;
@property (nonatomic, strong) UIColor * _Nonnull tagBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIColor * _Nonnull contentColor;
@property (nonatomic, strong) UIFont * _Nonnull contentFont;
/// 数据更新
- (void)setDataWith:(NSString * _Nullable)title text:(NSString * _Nullable)text tags:(NSArray<CMSInformationTagModel *> * _Nullable)tags;
/// 是否同步刷新数据
- (void)setDataWith:(NSString * _Nullable)title text:(NSString * _Nullable)text tags:(NSArray<CMSInformationTagModel *> * _Nullable)tags isSync:(BOOL)isSync;
@property (nonatomic, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, strong) UILabel * _Nonnull contentLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@class UIImage;

SWIFT_CLASS("_TtC7CMSPaaS22CMSInformationTagModel")
@interface CMSInformationTagModel : NSObject
/// 文本
@property (nonatomic, copy) NSString * _Nullable title;
/// 文本颜色
@property (nonatomic, strong) UIColor * _Nullable textColor;
/// 文本背景
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 线性控制的方向
typedef SWIFT_ENUM(NSInteger, CMSMarqueeScrollDirection, closed) {
/// 垂直
  CMSMarqueeScrollDirectionVertical = 0,
/// 水平
  CMSMarqueeScrollDirectionHorizontal = 1,
/// 垂直分页
  CMSMarqueeScrollDirectionVerticalPage = 2,
/// 水平分页
  CMSMarqueeScrollDirectionHorizontalPage = 3,
};

@class NSAttributedString;

/// 线性控制视图，跑马灯效果
SWIFT_CLASS("_TtC7CMSPaaS18CMSMarqueeTextView")
@interface CMSMarqueeTextView : UIView
/// 内容间距
@property (nonatomic) CGFloat contentSpacing;
/// 滚动模式下生效，滚动速度,每秒所滚动的单位
@property (nonatomic) CGFloat scrollSpeed;
/// 是否自动滚动
@property (nonatomic) BOOL isAutoScroll;
/// 是否需要皮肤
@property (nonatomic) BOOL needTheme;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didSelectItemBlock)(NSInteger);
/// 滑动方向
@property (nonatomic) enum CMSMarqueeScrollDirection scrollDirection;
/// 自定义cell设置
@property (nonatomic, weak) id <CMSCycleCollectionViewDelegate> _Nullable delegate;
- (void)register:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (void)registerWithNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// 默认字体
@property (nonatomic, strong) UIFont * _Nonnull font;
/// 跑马灯文本数据源
@property (nonatomic, copy) NSArray<NSString *> * _Nullable textList;
/// 跑马灯属性字符串数据源
@property (nonatomic, copy) NSArray<NSAttributedString *> * _Nullable attributedTextList;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface CMSMarqueeTextView (SWIFT_EXTENSION(CMSPaaS)) <CMSCycleCollectionViewDelegate>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP7CMSPaaS21CMSPlayerViewDelegate_")
@protocol CMSPlayerViewDelegate
/// 修改进度
- (void)seekWithProgress:(float)progress;
/// 播放
- (void)play;
/// 暂停
- (void)puase;
@end

@class UIButton;
@class UIImageView;

SWIFT_CLASS("_TtC7CMSPaaS28CMSSectionHeadCardHeaderView")
@interface CMSSectionHeadCardHeaderView : UIView
@property (nonatomic, readonly, strong) UIButton * _Nullable leftButton;
@property (nonatomic, readonly, strong) UILabel * _Nonnull buttonTitleLabel;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull buttonImageView;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didClickBlock)(void);
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


@class CMSThreeLinesTextModel;

/// 带有head的卡片式view
SWIFT_CLASS("_TtC7CMSPaaS22CMSSectionHeadCardView")
@interface CMSSectionHeadCardView : UIView
@property (nonatomic, copy) NSArray<CMSThreeLinesTextModel *> * _Nullable dataSource;
@property (nonatomic, strong) CMSSectionHeadCardHeaderView * _Nonnull headerView;
@property (nonatomic, strong) CMSCycleCollectionView * _Nonnull collectionView;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


@interface CMSSectionHeadCardView (SWIFT_EXTENSION(CMSPaaS)) <CMSCycleCollectionViewDelegate>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

enum CMSSmartOrderTextCellUIType : NSInteger;

SWIFT_CLASS("_TtC7CMSPaaS21CMSSmartOrderTextCell")
@interface CMSSmartOrderTextCell : UITableViewCell
@property (nonatomic) enum CMSSmartOrderTextCellUIType uiType;
- (void)setWithName:(NSString * _Nullable)name for:(id _Nullable)desc;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CMSSmartOrderTextCellUIType, closed) {
  CMSSmartOrderTextCellUITypeList = 0,
  CMSSmartOrderTextCellUITypeDetail = 1,
};

@class CMSSmartOrderModel;
@class UIEvent;

SWIFT_CLASS("_TtC7CMSPaaS17CMSSmartOrderView")
@interface CMSSmartOrderView : UIView
/// 需要刷新ui时的回调
@property (nonatomic, copy) void (^ _Nullable didSelectHeaderBlock)(void);
/// 选中了按钮时的回调
@property (nonatomic, copy) void (^ _Nullable didSelectButtonBlock)(NSInteger);
@property (nonatomic, strong) CMSSmartOrderModel * _Nullable sectionModel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)reloadData;
@end

@class UITableView;

@interface CMSSmartOrderView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


/// 数据源 Item
SWIFT_CLASS("_TtC7CMSPaaS20CMSTableSectionModel")
@interface CMSTableSectionModel : NSObject
@property (nonatomic, copy) NSArray * _Nonnull rowDatas;
@property (nonatomic) id _Nullable headerModel;
@property (nonatomic) id _Nullable footerModel;
- (CMSTableSectionModel * _Nonnull)initWithCellData:(NSArray * _Nonnull)data SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CMSPaaS12CMSTableView")
@interface CMSTableView : UITableView
/// 获取cell   class 作为 Identifier  通过model
@property (nonatomic, copy) NSDictionary<NSString *, Class> * _Nonnull (^ _Nullable cellIdentifierAndClassOfModelCallBack)(id _Nonnull, NSIndexPath * _Nonnull);
/// 获取 cell  setModel
@property (nonatomic, copy) void (^ _Nullable configCellOfModelCallBack)(UITableViewCell * _Nonnull, id _Nonnull);
/// 获取headerFooter  class 作为 Identifier  通过model
@property (nonatomic, copy) NSDictionary<NSString *, Class> * _Nonnull (^ _Nullable headerFooterIdentifierAndClassOfModelCallBack)(BOOL, CMSTableSectionModel * _Nonnull, NSInteger);
/// headerFooter 配置数据
@property (nonatomic, copy) void (^ _Nullable configHeaderFooterOfModelCallBack)(UIView * _Nonnull, CMSTableSectionModel * _Nonnull);
/// headerFooter 点击回调方法
@property (nonatomic, copy) void (^ _Nullable sectionViewTapCallBack)(UIView * _Nonnull, CMSTableSectionModel * _Nonnull);
/// scrollView  delegate (有需求再添加)
@property (nonatomic, copy) void (^ _Nullable scrollViewDidScroll)(UIScrollView * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable willBeginDragging)(UIScrollView * _Nonnull);
/// cell 编辑 删除功能 回调方法
@property (nonatomic) BOOL canEdit;
@property (nonatomic, copy) void (^ _Nullable deleteRowCallback)(id _Nonnull, NSIndexPath * _Nonnull);
/// 传入数据源 并刷新视图，需要按照数据源方式输入  [ [ model1] , [model2] ]
@property (nonatomic, copy) NSArray<CMSTableSectionModel *> * _Nullable datas;
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// 循环注册cell 根据 model 类型
- (void)registerCellOfClass:(NSDictionary<NSString *, Class> * _Nonnull)cellClasses;
/// 循环注册Header 或者 footer  根据 model 类型
- (void)registerHeaderFooterOfClass:(NSDictionary<NSString *, Class> * _Nonnull)cellClasses;
@end


@interface CMSTableView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface CMSTableView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
/// MARK: UIScrollViewDelegate
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7CMSPaaS22CMSThreeLinesTextModel")
@interface CMSThreeLinesTextModel : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable typeScale;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nameScale;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableAttributedString;

SWIFT_CLASS("_TtC7CMSPaaS21CMSThreeLinesTextView")
@interface CMSThreeLinesTextView : UIView
- (void)setCenterTitleWith:(NSString * _Nullable)title :(NSString * _Nonnull)symbol;
@property (nonatomic, copy) UIColor * _Nonnull (^ _Nullable centerTitleColorBlock)(NSString * _Nullable);
@property (nonatomic, copy) NSAttributedString * _Nonnull (^ _Nullable centerTitleAttributedBlock)(NSString * _Nullable, NSString * _Nullable);
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, strong) NSMutableAttributedString * _Nullable centerAttributedTitle;
@property (nonatomic, copy) NSString * _Nullable subtitle;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC7CMSPaaS25CMSThreeLinesTextViewCell")
@interface CMSThreeLinesTextViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


/// 处理timer强引用类
SWIFT_CLASS("_TtC7CMSPaaS17CMSWeakTimerProxy")
@interface CMSWeakTimerProxy : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface NSString (SWIFT_EXTENSION(CMSPaaS))
- (UIImage * _Nullable)cms_imageWith:(UIEdgeInsets)padding font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius SWIFT_WARN_UNUSED_RESULT;
@end




@interface UITableViewCell (SWIFT_EXTENSION(CMSPaaS))
@property (nonatomic, copy) void (^ _Nullable selectRowModelCallBack)(id _Nonnull);
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef CMSPAAS_SWIFT_H
#define CMSPAAS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CMSPaaS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSNumber;
@class UIColor;
@class UIFont;
@class NSString;
enum CMSAudioStatus : NSInteger;
@protocol CMSPlayerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC7CMSPaaS16CMSAudioPlayView")
@interface CMSAudioPlayView : UIView
/// 缓存进度条
@property (nonatomic) CGFloat backProgress;
/// 当前播放进度
@property (nonatomic) CGFloat currentPlayProgress;
/// 播放左边颜色
@property (nonatomic, strong) UIColor * _Nullable readColor;
/// 播放右边颜色
@property (nonatomic, strong) UIColor * _Nullable readyColor;
/// 时间颜色
@property (nonatomic, strong) UIColor * _Nullable timeColor;
/// 时间字体大小
@property (nonatomic, strong) UIFont * _Nullable timeFont;
/// 时间背景颜色
@property (nonatomic, strong) UIColor * _Nullable timeBackGroundColor;
/// 切圆角
@property (nonatomic) CGFloat roundedCornersRadius;
/// 结束时间
@property (nonatomic, copy) NSString * _Nullable endTime;
/// 开始时间
@property (nonatomic, copy) NSString * _Nullable startTime;
/// 播放改变状态 （主要针对播放完成时的状态）
@property (nonatomic) enum CMSAudioStatus status;
/// 播放代理接口
@property (nonatomic, weak) id <CMSPlayerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// 使用适配需要重新配置UI界面
- (void)refreshUI;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CMSAudioStatus, closed) {
  CMSAudioStatusAudioStatusPlaying = 0,
  CMSAudioStatusAudioStatusPaused = 1,
  CMSAudioStatusAudioStatusFailed = 2,
  CMSAudioStatusAudioStatusFinished = 3,
  CMSAudioStatusAudioStatusAgain = 4,
};


SWIFT_CLASS("_TtC7CMSPaaS15CMSCustomSlider")
@interface CMSCustomSlider : UISlider
- (CGRect)minimumValueImageRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)maximumValueImageRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)trackRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum CMSCycleScrollType : NSInteger;
@protocol CMSCycleCollectionViewDelegate;
@class UINib;
@class NSIndexPath;
@class UICollectionViewCell;

SWIFT_CLASS("_TtC7CMSPaaS22CMSCycleCollectionView")
@interface CMSCycleCollectionView : UIView
/// 外边距
@property (nonatomic) UIEdgeInsets marginInset;
/// 内边距
@property (nonatomic) UIEdgeInsets paddingInset;
/// item 宽高比(竖向 高宽比)，默认0 如果想指定大小，设置为0, 阈值[0,5]
@property (nonatomic) CGFloat itemSizeScale;
/// 高度不能大于frame - 内边距，否则按照比例自动缩减
@property (nonatomic) CGSize itemSize;
/// 间距
@property (nonatomic) CGFloat minimumLineSpacing;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didSelectItemBlock)(NSInteger);
/// 监听滚动的结果 currentIndex 翻页滚动时返回   offset 滚动偏移量
@property (nonatomic, copy) void (^ _Nullable didScrollItemOperationBlock)(NSInteger, CGPoint);
/// 是否可用滑动手势
@property (nonatomic) BOOL isEnabledPanGestureRecognizer;
/// 滚动模式
@property (nonatomic) enum CMSCycleScrollType scrollType;
/// 滚动模式下生效，滚动速度,每秒所滚动的单位
@property (nonatomic) CGFloat scrollSpeed;
/// 自动滚动间隔时间,默认2.5s
@property (nonatomic) NSTimeInterval autoScrollTimeInterval;
/// 是否自动滚动,默认false
@property (nonatomic) BOOL isAutoScroll;
/// 是否无限循环
@property (nonatomic) BOOL isInfiniteLoop;
/// 修正比例，无限循环条件下生效，阈值 0-1， 0 不修正， 1持续修正
@property (nonatomic) CGFloat fixScale;
/// 方向
@property (nonatomic) UICollectionViewScrollDirection scrollDirection;
/// 是否按页操作
@property (nonatomic) BOOL isPagingEnabled;
@property (nonatomic, weak) id <CMSCycleCollectionViewDelegate> _Nullable delegate;
- (void)register:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (void)registerWithNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (UICollectionViewCell * _Nonnull)dequeueReusableCellWithReuseIdentifier:(NSString * _Nonnull)identifier forIndexPath:(NSIndexPath * _Nonnull)forIndexPath SWIFT_WARN_UNUSED_RESULT;
- (void)reloadData;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class UICollectionViewLayout;

@interface CMSCycleCollectionView (SWIFT_EXTENSION(CMSPaaS)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


@class UIScrollView;

@interface CMSCycleCollectionView (SWIFT_EXTENSION(CMSPaaS)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)invalidateTimer;
- (void)setupTimer;
@end


SWIFT_PROTOCOL("_TtP7CMSPaaS30CMSCycleCollectionViewDelegate_")
@protocol CMSCycleCollectionViewDelegate <NSObject>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@optional
- (CGSize)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

/// 滚动模式
typedef SWIFT_ENUM(NSInteger, CMSCycleScrollType, closed) {
/// 分页式滚动
  CMSCycleScrollTypePage = 0,
/// 匀速滚动
  CMSCycleScrollTypeConstantSpeed = 1,
};


SWIFT_CLASS("_TtC7CMSPaaS19CMSHomeLecturerView")
@interface CMSHomeLecturerView : UIView
@property (nonatomic) BOOL adTag;
@property (nonatomic, copy) NSString * _Nonnull adTagBackColor;
@property (nonatomic, copy) NSString * _Nonnull noticeTag;
@property (nonatomic, copy) NSString * _Nonnull headlineStr;
@property (nonatomic, copy) NSString * _Nonnull titleStr;
@property (nonatomic, copy) NSString * _Nonnull startTime;
@property (nonatomic, copy) NSString * _Nonnull nameStr;
@property (nonatomic, copy) NSString * _Nonnull backImage;
@property (nonatomic, copy) NSString * _Nonnull headImage;
@property (nonatomic, copy) NSString * _Nonnull playImage;
- (void)setViewHeadlineBackColor:(NSString * _Nonnull)headlineBackColorStr titleColor:(NSString * _Nonnull)titleColorStr userNameRightColor:(NSString * _Nonnull)rightColor userNameLeftColor:(NSString * _Nonnull)leftColor;
- (void)setViewDataTitle:(NSString * _Nonnull)titleStr headline:(NSString * _Nonnull)headlineStr adTag:(BOOL)isAdTag userName:(NSString * _Nonnull)nameStr userPosition:(NSString * _Nonnull)position;
- (void)setViewBackImage:(NSString * _Nonnull)backImageStr playImage:(NSString * _Nonnull)playImageStr headImage:(NSString * _Nonnull)headImageStr;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CMSPaaS19CMSHomeMaskPlayView")
@interface CMSHomeMaskPlayView : UIView
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageNamed;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class CMSInformationTagModel;
@class UILabel;

SWIFT_CLASS("_TtC7CMSPaaS25CMSInformationContentView")
@interface CMSInformationContentView : UIView
/// 默认不使用缓存
@property (nonatomic) BOOL isUseCache;
@property (nonatomic) CGFloat preferredMaxLayoutWidth;
@property (nonatomic) CGFloat titleMinLineHeight;
@property (nonatomic) NSInteger textNumberOfLines;
@property (nonatomic) CGFloat textMinLineHeight;
@property (nonatomic, strong) UIFont * _Nonnull tagFont;
@property (nonatomic, strong) UIColor * _Nonnull tagColor;
@property (nonatomic, strong) UIColor * _Nonnull tagBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIColor * _Nonnull contentColor;
@property (nonatomic, strong) UIFont * _Nonnull contentFont;
/// 数据更新
- (void)setDataWith:(NSString * _Nullable)title text:(NSString * _Nullable)text tags:(NSArray<CMSInformationTagModel *> * _Nullable)tags;
/// 是否同步刷新数据
- (void)setDataWith:(NSString * _Nullable)title text:(NSString * _Nullable)text tags:(NSArray<CMSInformationTagModel *> * _Nullable)tags isSync:(BOOL)isSync;
@property (nonatomic, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, strong) UILabel * _Nonnull contentLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@class UIImage;

SWIFT_CLASS("_TtC7CMSPaaS22CMSInformationTagModel")
@interface CMSInformationTagModel : NSObject
/// 文本
@property (nonatomic, copy) NSString * _Nullable title;
/// 文本颜色
@property (nonatomic, strong) UIColor * _Nullable textColor;
/// 文本背景
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 线性控制的方向
typedef SWIFT_ENUM(NSInteger, CMSMarqueeScrollDirection, closed) {
/// 垂直
  CMSMarqueeScrollDirectionVertical = 0,
/// 水平
  CMSMarqueeScrollDirectionHorizontal = 1,
/// 垂直分页
  CMSMarqueeScrollDirectionVerticalPage = 2,
/// 水平分页
  CMSMarqueeScrollDirectionHorizontalPage = 3,
};

@class NSAttributedString;

/// 线性控制视图，跑马灯效果
SWIFT_CLASS("_TtC7CMSPaaS18CMSMarqueeTextView")
@interface CMSMarqueeTextView : UIView
/// 内容间距
@property (nonatomic) CGFloat contentSpacing;
/// 滚动模式下生效，滚动速度,每秒所滚动的单位
@property (nonatomic) CGFloat scrollSpeed;
/// 是否自动滚动
@property (nonatomic) BOOL isAutoScroll;
/// 是否需要皮肤
@property (nonatomic) BOOL needTheme;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didSelectItemBlock)(NSInteger);
/// 滑动方向
@property (nonatomic) enum CMSMarqueeScrollDirection scrollDirection;
/// 自定义cell设置
@property (nonatomic, weak) id <CMSCycleCollectionViewDelegate> _Nullable delegate;
- (void)register:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
- (void)registerWithNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// 默认字体
@property (nonatomic, strong) UIFont * _Nonnull font;
/// 跑马灯文本数据源
@property (nonatomic, copy) NSArray<NSString *> * _Nullable textList;
/// 跑马灯属性字符串数据源
@property (nonatomic, copy) NSArray<NSAttributedString *> * _Nullable attributedTextList;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface CMSMarqueeTextView (SWIFT_EXTENSION(CMSPaaS)) <CMSCycleCollectionViewDelegate>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP7CMSPaaS21CMSPlayerViewDelegate_")
@protocol CMSPlayerViewDelegate
/// 修改进度
- (void)seekWithProgress:(float)progress;
/// 播放
- (void)play;
/// 暂停
- (void)puase;
@end

@class UIButton;
@class UIImageView;

SWIFT_CLASS("_TtC7CMSPaaS28CMSSectionHeadCardHeaderView")
@interface CMSSectionHeadCardHeaderView : UIView
@property (nonatomic, readonly, strong) UIButton * _Nullable leftButton;
@property (nonatomic, readonly, strong) UILabel * _Nonnull buttonTitleLabel;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull buttonImageView;
/// 监听点击
@property (nonatomic, copy) void (^ _Nullable didClickBlock)(void);
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


@class CMSThreeLinesTextModel;

/// 带有head的卡片式view
SWIFT_CLASS("_TtC7CMSPaaS22CMSSectionHeadCardView")
@interface CMSSectionHeadCardView : UIView
@property (nonatomic, copy) NSArray<CMSThreeLinesTextModel *> * _Nullable dataSource;
@property (nonatomic, strong) CMSSectionHeadCardHeaderView * _Nonnull headerView;
@property (nonatomic, strong) CMSCycleCollectionView * _Nonnull collectionView;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


@interface CMSSectionHeadCardView (SWIFT_EXTENSION(CMSPaaS)) <CMSCycleCollectionViewDelegate>
- (NSInteger)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(CMSCycleCollectionView * _Nonnull)collectionView cellForItemAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

enum CMSSmartOrderTextCellUIType : NSInteger;

SWIFT_CLASS("_TtC7CMSPaaS21CMSSmartOrderTextCell")
@interface CMSSmartOrderTextCell : UITableViewCell
@property (nonatomic) enum CMSSmartOrderTextCellUIType uiType;
- (void)setWithName:(NSString * _Nullable)name for:(id _Nullable)desc;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CMSSmartOrderTextCellUIType, closed) {
  CMSSmartOrderTextCellUITypeList = 0,
  CMSSmartOrderTextCellUITypeDetail = 1,
};

@class CMSSmartOrderModel;
@class UIEvent;

SWIFT_CLASS("_TtC7CMSPaaS17CMSSmartOrderView")
@interface CMSSmartOrderView : UIView
/// 需要刷新ui时的回调
@property (nonatomic, copy) void (^ _Nullable didSelectHeaderBlock)(void);
/// 选中了按钮时的回调
@property (nonatomic, copy) void (^ _Nullable didSelectButtonBlock)(NSInteger);
@property (nonatomic, strong) CMSSmartOrderModel * _Nullable sectionModel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)reloadData;
@end

@class UITableView;

@interface CMSSmartOrderView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


/// 数据源 Item
SWIFT_CLASS("_TtC7CMSPaaS20CMSTableSectionModel")
@interface CMSTableSectionModel : NSObject
@property (nonatomic, copy) NSArray * _Nonnull rowDatas;
@property (nonatomic) id _Nullable headerModel;
@property (nonatomic) id _Nullable footerModel;
- (CMSTableSectionModel * _Nonnull)initWithCellData:(NSArray * _Nonnull)data SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CMSPaaS12CMSTableView")
@interface CMSTableView : UITableView
/// 获取cell   class 作为 Identifier  通过model
@property (nonatomic, copy) NSDictionary<NSString *, Class> * _Nonnull (^ _Nullable cellIdentifierAndClassOfModelCallBack)(id _Nonnull, NSIndexPath * _Nonnull);
/// 获取 cell  setModel
@property (nonatomic, copy) void (^ _Nullable configCellOfModelCallBack)(UITableViewCell * _Nonnull, id _Nonnull);
/// 获取headerFooter  class 作为 Identifier  通过model
@property (nonatomic, copy) NSDictionary<NSString *, Class> * _Nonnull (^ _Nullable headerFooterIdentifierAndClassOfModelCallBack)(BOOL, CMSTableSectionModel * _Nonnull, NSInteger);
/// headerFooter 配置数据
@property (nonatomic, copy) void (^ _Nullable configHeaderFooterOfModelCallBack)(UIView * _Nonnull, CMSTableSectionModel * _Nonnull);
/// headerFooter 点击回调方法
@property (nonatomic, copy) void (^ _Nullable sectionViewTapCallBack)(UIView * _Nonnull, CMSTableSectionModel * _Nonnull);
/// scrollView  delegate (有需求再添加)
@property (nonatomic, copy) void (^ _Nullable scrollViewDidScroll)(UIScrollView * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable willBeginDragging)(UIScrollView * _Nonnull);
/// cell 编辑 删除功能 回调方法
@property (nonatomic) BOOL canEdit;
@property (nonatomic, copy) void (^ _Nullable deleteRowCallback)(id _Nonnull, NSIndexPath * _Nonnull);
/// 传入数据源 并刷新视图，需要按照数据源方式输入  [ [ model1] , [model2] ]
@property (nonatomic, copy) NSArray<CMSTableSectionModel *> * _Nullable datas;
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// 循环注册cell 根据 model 类型
- (void)registerCellOfClass:(NSDictionary<NSString *, Class> * _Nonnull)cellClasses;
/// 循环注册Header 或者 footer  根据 model 类型
- (void)registerHeaderFooterOfClass:(NSDictionary<NSString *, Class> * _Nonnull)cellClasses;
@end


@interface CMSTableView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface CMSTableView (SWIFT_EXTENSION(CMSPaaS)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
/// MARK: UIScrollViewDelegate
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC7CMSPaaS22CMSThreeLinesTextModel")
@interface CMSThreeLinesTextModel : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable typeScale;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nameScale;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableAttributedString;

SWIFT_CLASS("_TtC7CMSPaaS21CMSThreeLinesTextView")
@interface CMSThreeLinesTextView : UIView
- (void)setCenterTitleWith:(NSString * _Nullable)title :(NSString * _Nonnull)symbol;
@property (nonatomic, copy) UIColor * _Nonnull (^ _Nullable centerTitleColorBlock)(NSString * _Nullable);
@property (nonatomic, copy) NSAttributedString * _Nonnull (^ _Nullable centerTitleAttributedBlock)(NSString * _Nullable, NSString * _Nullable);
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, strong) NSMutableAttributedString * _Nullable centerAttributedTitle;
@property (nonatomic, copy) NSString * _Nullable subtitle;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC7CMSPaaS25CMSThreeLinesTextViewCell")
@interface CMSThreeLinesTextViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


/// 处理timer强引用类
SWIFT_CLASS("_TtC7CMSPaaS17CMSWeakTimerProxy")
@interface CMSWeakTimerProxy : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface NSString (SWIFT_EXTENSION(CMSPaaS))
- (UIImage * _Nullable)cms_imageWith:(UIEdgeInsets)padding font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius SWIFT_WARN_UNUSED_RESULT;
@end




@interface UITableViewCell (SWIFT_EXTENSION(CMSPaaS))
@property (nonatomic, copy) void (^ _Nullable selectRowModelCallBack)(id _Nonnull);
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
